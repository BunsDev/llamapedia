import streamlit as st


def set_wiki_style():
    st.markdown(
        """
    <style>
    .main {
        background-color: #ffffff;
        color: #202122;
        font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Lato,Helvetica,Arial,sans-serif;
    }
    .stApp {
        max-width: 1200px;
        margin: 0 auto;
    }
    h1 {
        font-family: 'Linux Libertine','Georgia','Times',serif;
        color: #202122;
        border-bottom: 1px solid #a2a9b1;
        padding-bottom: 5px;
        margin-bottom: 20px;
    }
    .stTextInput>div>div>input {
        width: 70%;
    }
    .stButton>button {
        background-color: #36c;
        color: white;
        width: 20%;
        margin-left: auto;
    }
    p, li {
        font-size: 14px;
        line-height: 1.6;
        color: #202122;
    }
    h2 {
        font-family: 'Linux Libertine','Georgia','Times',serif;
        border-bottom: 1px solid #a2a9b1;
        padding-bottom: 5px;
        color: #202122;
    }
    .references {
        background-color: #f8f9fa;
        border: 1px solid #a2a9b1;
        padding: 10px;
        margin-top: 20px;
    }
    .categories {
        background-color: #f8f9fa;
        border: 1px solid #a2a9b1;
        padding: 10px;
        margin-top: 20px;
    }
    span {
        color: #202122;
        -webkit-text-stroke: 0.7px white;
    }
    </style>
    """,
        unsafe_allow_html=True,
    )


def render_wiki_interface():
    set_wiki_style()

    # Create a container for the top bar
    top_bar = st.container()

    with top_bar:
        # Center the Llamapedia banner
        st.markdown(
            "<h1 style='text-align: center;'>Llamapedia</h1>",
            unsafe_allow_html=True,
        )
        
        user_query = st.text_input("", placeholder="Search Llamapedia")

        search_button = st.button("Search")

    if search_button or (
        user_query and st.session_state.get("last_query") != user_query
    ):
        st.session_state["last_query"] = user_query
        return user_query

    if not user_query:
        display_intro()

    return None


def display_intro():
    st.title("Welcome to Llamapedia")
    st.markdown(
        """
    Llamapedia is an AI-powered encyclopedia that generates informative articles on a wide range of topics. 
    To get started:

    1. Enter a topic or question in the search bar at the top.
    2. Click the "Search" button or press Enter.
    3. Wait for the AI to generate a comprehensive article based on your query.

    Please note that the information provided is generated by an AI model and should be verified with authoritative sources for critical use.

    Happy exploring!
    """
    )


def display_response(query, response):
    st.title(query)
    st.markdown("---")
    st.markdown(response)

    # Add a fake "References" section
    st.markdown('<div class="references">', unsafe_allow_html=True)
    st.markdown("## References")
    st.markdown("1. OLLAMA Language Model (2023)")
    st.markdown("2. AI-generated content based on user query")
    st.markdown("</div>", unsafe_allow_html=True)

    # Add a fake "Categories" section
    st.markdown('<div class="categories">', unsafe_allow_html=True)
    st.markdown("Categories: AI-generated content | OLLAMA | Encyclopedia articles")
    st.markdown("</div>", unsafe_allow_html=True)
